apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'eu.appcom.gradle.android-versioning'

androidExtensions {
  experimental = true
}

android {
  compileSdkVersion rootProject.compileSdkVersion
  buildToolsVersion rootProject.buildToolsVersion
  defaultConfig {
    applicationId 'com.g00fy2.developerwidget'
    minSdkVersion rootProject.minSdkVersion
    targetSdkVersion rootProject.targetSdkVersion
    versionCode versioning.getVersionCode()
    versionName versioning.getVersionName()

    vectorDrawables.useSupportLibrary = true
  }
  signingConfigs {
    release {
      storeFile file('../keystore.jks')
      storePassword project.hasProperty('my_storepass') ? my_storepass : ''
      keyAlias project.hasProperty('my_keyalias') ? my_keyalias : ''
      keyPassword project.hasProperty('my_keypass') ? my_keypass : ''
      v1SigningEnabled true
      v2SigningEnabled true
    }
  }
  buildTypes {
    debug {
      applicationIdSuffix '.debug'
    }
    release {
      signingConfig signingConfigs.release
      shrinkResources true
      minifyEnabled true
      proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
    }
  }
  versioning {
    baseName = 'developerwidget'
  }
  applicationVariants.all { variant ->
    if (variant.getName().toLowerCase().contains('release')) {
      variant.outputs.all {
        outputFileName = versioning.getApkName(variant)
      }
    }
  }
  sourceSets {
    main.java.srcDirs += 'src/main/kotlin'
  }
  compileOptions {
    sourceCompatibility = '1.8'
    targetCompatibility = '1.8'
  }
  kotlinOptions {
    jvmTarget = '1.8'
  }
  kapt {
    javacOptions {
      option('-source', '8')
      option('-target', '8')
    }
  }
}

dependencies {
  // Kotlin
  implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlinVersion"
  implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutinesVersion"

  // AndroidX
  implementation "androidx.appcompat:appcompat:$appcompatVersion"
  implementation "androidx.core:core-ktx:$coreKtxVersion"
  implementation "androidx.activity:activity:$activityVersion"
  implementation "androidx.recyclerview:recyclerview:$recyclerviewVersion"
  implementation "androidx.constraintlayout:constraintlayout:$constraintlayoutVersion"
  implementation "androidx.vectordrawable:vectordrawable:$vectorDrawableVersion"

  // UI
  implementation "com.google.android.material:material:$materialVersion"

  // Misc
  implementation "com.jakewharton.timber:timber:$timberVersion"
  implementation "com.g00fy2:versioncompare:$versCompVersion"

  // Dagger
  implementation "com.google.dagger:dagger:$daggerVersion"
  kapt "com.google.dagger:dagger-compiler:$daggerVersion"
  implementation "com.google.dagger:dagger-android:$daggerVersion"
  implementation "com.google.dagger:dagger-android-support:$daggerVersion"
  kapt "com.google.dagger:dagger-android-processor:$daggerVersion"
}