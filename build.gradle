import com.android.tools.r8.Version
import com.github.jk1.license.filter.*
import com.github.jk1.license.render.*

apply plugin: 'com.github.jk1.dependency-license-report'

buildscript {
  ext {
    // SDK and plugins
    compileSdkVersion = 29
    buildToolsVersion = '29.0.2'
    minSdkVersion = 14
    targetSdkVersion = 29
    androidGradleVersion = '4.0.0-alpha07'
    versioningPluginVersion = '1.0.2'
    licenseReportVersion = '1.11'

    // Library versions
    kotlinVersion = '1.3.61'
    coroutinesVersion = '1.3.2'
    appcompatVersion = '1.2.0-alpha01'
    coreKtxVersion = '1.2.0-rc01'
    activityVersion = '1.1.0-rc03'
    lifecycleVersion = '2.2.0-rc03'
    materialVersion = '1.2.0-alpha03'
    recyclerviewVersion = '1.2.0-alpha01'
    vectorDrawableVersion = '1.1.0'
    constraintlayoutVersion = '2.0.0-beta4'
    timberVersion = '4.7.1'
    daggerVersion = '2.25.3'
    versCompVersion = '1.3.3'
  }
  repositories {
    google()
    mavenCentral()
    jcenter() {
      content {
        includeModule 'eu.appcom.gradle', 'android-versioning'
        includeModule 'org.jetbrains.trove4j', 'trove4j'
      }
    }
    gradlePluginPortal()
  }
  dependencies {
    classpath "com.android.tools.build:gradle:$androidGradleVersion"
    classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
    classpath "eu.appcom.gradle:android-versioning:$versioningPluginVersion"
    classpath "com.github.jk1:gradle-license-report:$licenseReportVersion"
  }
}

licenseReport {
  configurations = ['releaseRuntimeClasspath']
  renderers = [new SimpleHtmlReportRenderer(), new JsonReportRenderer()]
  filters = [new LicenseBundleNormalizer()]
}

task clean(type: Delete) {
  delete rootProject.buildDir
}

task printR8Version() {
  try {
    println "R8 version: " + Version.getVersionString()
  } catch (ignored) {
    println 'R8 version: unknown'
  }
}
